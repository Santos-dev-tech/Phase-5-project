rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Orders collection - allow authenticated users to create and read their own orders
    match /orders/{orderId} {
      // Allow create for any authenticated user
      allow create: if request.auth != null;
      // Allow read/write if user owns the order (check both customerId and userId fields)
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.customerId || 
         request.auth.uid == resource.data.userId ||
         request.auth.uid == request.resource.data.customerId ||
         request.auth.uid == request.resource.data.userId);
    }
    
    // Transactions collection - allow authenticated users to create and read their own transactions
    match /transactions/{transactionId} {
      // Allow create for any authenticated user
      allow create: if request.auth != null;
      // Allow read/write if user owns the transaction
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.uid == request.resource.data.userId);
    }
    
    // Menu items - read-only for all authenticated users
    match /menu/{menuId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Admin collection - accessible by authenticated users for now
    match /admin/{document=**} {
      allow read, write: if request.auth != null;
    }
    
    // Public data that everyone can read
    match /public/{document=**} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    // Temporary: Allow all authenticated users to read/write during development
    // Remove this in production!
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
  }
}
